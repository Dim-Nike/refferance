{"ast":null,"code":"var _jsxFileName = \"/home/trigger/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Docker-React/React-referance/react-doker/src/pages/Registration/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useForm, Controller } from \"react-hook-form\";\nimport { TextField, Grid, makeStyles, Container, Button, Typography } from \"@material-ui/core\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport validationSchema from \"./validation\";\nimport api from \"../../services/api\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  buttonSpacing: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction Registration() {\n  _s();\n\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(false);\n  const auth = useAuth();\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    setError\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n\n  const onSubmit = async data => {\n    try {\n      setIsLoading(true);\n      await api.auth.registration(data);\n      const {\n        data: loginData\n      } = await api.auth.login(data);\n      auth.setToken(loginData.token);\n      auth.setUser(loginData.user);\n    } catch (e) {\n      if (e.response.status === 422) {\n        Object.keys(e.response.data.errors).forEach(key => {\n          setError(key, {\n            type: \"manual\",\n            message: e.response.data.errors[key]\n          });\n        });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Create new account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"firstName\",\n            control: control,\n            defaultValue: \"\",\n            render: _ref => {\n              var _errors$firstName, _errors$firstName2;\n\n              let {\n                field\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                error: Boolean((_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message),\n                fullWidth: true,\n                label: \"First name\",\n                variant: \"filled\",\n                helperText: (_errors$firstName2 = errors.firstName) === null || _errors$firstName2 === void 0 ? void 0 : _errors$firstName2.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"lastName\",\n            control: control,\n            defaultValue: \"\",\n            render: _ref2 => {\n              var _errors$lastName, _errors$lastName2;\n\n              let {\n                field\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                error: Boolean((_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.message),\n                fullWidth: true,\n                label: \"Last name\",\n                variant: \"filled\",\n                helperText: (_errors$lastName2 = errors.lastName) === null || _errors$lastName2 === void 0 ? void 0 : _errors$lastName2.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"lastName\",\n            control: control,\n            defaultValue: \"\",\n            render: _ref3 => {\n              var _errors$lastName3, _errors$lastName4;\n\n              let {\n                field\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                error: Boolean((_errors$lastName3 = errors.lastName) === null || _errors$lastName3 === void 0 ? void 0 : _errors$lastName3.message),\n                fullWidth: true,\n                label: \"\",\n                variant: \"filled\",\n                helperText: (_errors$lastName4 = errors.lastName) === null || _errors$lastName4 === void 0 ? void 0 : _errors$lastName4.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"email\",\n            control: control,\n            defaultValue: \"\",\n            render: _ref4 => {\n              var _errors$email, _errors$email2;\n\n              let {\n                field\n              } = _ref4;\n              return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                error: Boolean((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message),\n                fullWidth: true,\n                type: \"email\",\n                label: \"Email\",\n                variant: \"filled\",\n                helperText: (_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"password\",\n            control: control,\n            defaultValue: \"\",\n            render: _ref5 => {\n              var _errors$password, _errors$password2;\n\n              let {\n                field\n              } = _ref5;\n              return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                error: Boolean((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message),\n                type: \"password\",\n                fullWidth: true,\n                label: \"Password\",\n                variant: \"filled\",\n                helperText: (_errors$password2 = errors.password) === null || _errors$password2 === void 0 ? void 0 : _errors$password2.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            type: \"submit\",\n            disabled: isLoading,\n            children: \"Registration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            type: \"submit\",\n            className: classes.buttonSpacing,\n            component: Link,\n            to: \"/login\",\n            children: \"Already have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Registration, \"LKQrINw3I6at5Q95Oi2EGcpQUpc=\", false, function () {\n  return [useStyles, useAuth, useForm];\n});\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["/home/trigger/Рабочий стол/Docker-React/React-referance/react-doker/src/pages/Registration/index.jsx"],"names":["useForm","Controller","TextField","Grid","makeStyles","Container","Button","Typography","yupResolver","validationSchema","api","useAuth","Link","useState","useStyles","theme","root","padding","spacing","buttonSpacing","marginLeft","Registration","classes","isLoading","setIsLoading","auth","control","handleSubmit","formState","errors","setError","resolver","onSubmit","data","registration","loginData","login","setToken","token","setUser","user","e","response","status","Object","keys","forEach","key","type","message","field","Boolean","firstName","lastName","email","password"],"mappings":"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","sourcesContent":["import { useForm, Controller } from \"react-hook-form\";\nimport {\n  TextField,\n  Grid,\n  makeStyles,\n  Container,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport validationSchema from \"./validation\";\nimport api from \"../../services/api\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n  buttonSpacing: {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nfunction Registration() {\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(false);\n  const auth = useAuth();\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n    setError,\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = async (data) => {\n    try {\n      setIsLoading(true);\n      await api.auth.registration(data);\n      const { data: loginData } = await api.auth.login(data);\n      auth.setToken(loginData.token);\n      auth.setUser(loginData.user);\n    } catch (e) {\n      if (e.response.status === 422) {\n        Object.keys(e.response.data.errors).forEach((key) => {\n          setError(key, {\n            type: \"manual\",\n            message: e.response.data.errors[key],\n          });\n        });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"xs\" className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">Create new account</Typography>\n        </Grid>\n      </Grid>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Controller\n              name=\"firstName\"\n              control={control}\n              defaultValue=\"\"\n              render={({ field }) => (\n                <TextField\n                  {...field}\n                  error={Boolean(errors.firstName?.message)}\n                  fullWidth={true}\n                  label=\"First name\"\n                  variant=\"filled\"\n                  helperText={errors.firstName?.message}\n                />\n              )}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Controller\n              name=\"lastName\"\n              control={control}\n              defaultValue=\"\"\n              render={({ field }) => (\n                <TextField\n                  {...field}\n                  error={Boolean(errors.lastName?.message)}\n                  fullWidth={true}\n                  label=\"Last name\"\n                  variant=\"filled\"\n                  helperText={errors.lastName?.message}\n                />\n              )}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Controller\n              name=\"lastName\"\n              control={control}\n              defaultValue=\"\"\n              render={({ field }) => (\n                <TextField\n                  {...field}\n                  error={Boolean(errors.lastName?.message)}\n                  fullWidth={true}\n                  label=\"\"\n                  variant=\"filled\"\n                  helperText={errors.lastName?.message}\n                />\n              )}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Controller\n              name=\"email\"\n              control={control}\n              defaultValue=\"\"\n              render={({ field }) => (\n                <TextField\n                  {...field}\n                  error={Boolean(errors.email?.message)}\n                  fullWidth={true}\n                  type=\"email\"\n                  label=\"Email\"\n                  variant=\"filled\"\n                  helperText={errors.email?.message}\n                />\n              )}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Controller\n              name=\"password\"\n              control={control}\n              defaultValue=\"\"\n              render={({ field }) => (\n                <TextField\n                  {...field}\n                  error={Boolean(errors.password?.message)}\n                  type=\"password\"\n                  fullWidth={true}\n                  label=\"Password\"\n                  variant=\"filled\"\n                  helperText={errors.password?.message}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              disabled={isLoading}\n            >\n              Registration\n            </Button>\n            <Button\n              color=\"inherit\"\n              type=\"submit\"\n              className={classes.buttonSpacing}\n              component={Link}\n              to=\"/login\"\n            >\n              Already have an account?\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </Container>\n  );\n}\n\nexport default Registration;\n"]},"metadata":{},"sourceType":"module"}