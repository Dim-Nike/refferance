{"ast":null,"code":"var _jsxFileName = \"/home/trigger/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Docker-React/React-referance/react-doker/src/pages/Profile/index.js\",\n    _s = $RefreshSig$();\n\nimport { useForm, Controller } from \"react-hook-form\";\nimport { TextField, Grid, makeStyles, Container, Button, Typography, Snackbar } from \"@material-ui/core\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport validationSchema from \"./validation\";\nimport api from \"../../services/api\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  }\n}));\n\nfunction Profile() {\n  _s();\n\n  const classes = useStyles();\n  const auth = useAuth();\n  const [isOpen, setIsOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    setError,\n    reset\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n\n  const onSubmit = async data => {\n    try {\n      setIsLoading(true);\n      const {\n        data: user\n      } = await api.auth.updateProfile(data);\n      auth.setUser(user);\n      setIsOpen(true);\n    } catch (e) {\n      if (e.response.status === 422) {\n        Object.keys(e.response.data.errors).forEach(key => {\n          setError(key, {\n            type: \"manual\",\n            message: e.response.data.errors[key]\n          });\n        });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const loadData = useCallback(async () => {\n    const {\n      data\n    } = await api.auth.getProfile();\n    reset({\n      firstName: data.firstName,\n      lastName: data.lastName\n    });\n  }, [reset]);\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Update profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"firstName\",\n            control: control,\n            defaultValue: \"\",\n            render: _ref => {\n              var _errors$firstName, _errors$firstName2;\n\n              let {\n                field\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                error: Boolean((_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message),\n                fullWidth: true,\n                label: \"First name\",\n                variant: \"filled\",\n                helperText: (_errors$firstName2 = errors.firstName) === null || _errors$firstName2 === void 0 ? void 0 : _errors$firstName2.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"lastName\",\n            control: control,\n            defaultValue: \"\",\n            render: _ref2 => {\n              var _errors$lastName, _errors$lastName2;\n\n              let {\n                field\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                error: Boolean((_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.message),\n                fullWidth: true,\n                label: \"Last name\",\n                variant: \"filled\",\n                helperText: (_errors$lastName2 = errors.lastName) === null || _errors$lastName2 === void 0 ? void 0 : _errors$lastName2.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            type: \"submit\",\n            disabled: isLoading,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: isOpen,\n      autoHideDuration: 6000,\n      onClose: () => setIsOpen(false),\n      message: \"Profile updated successfully\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Profile, \"yICH6VOWiYXdsHXynZAUSmIiEVg=\", false, function () {\n  return [useStyles, useAuth, useForm];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/trigger/Рабочий стол/Docker-React/React-referance/react-doker/src/pages/Profile/index.js"],"names":["useForm","Controller","TextField","Grid","makeStyles","Container","Button","Typography","Snackbar","yupResolver","validationSchema","api","useAuth","useCallback","useEffect","useState","useStyles","theme","root","padding","spacing","Profile","classes","auth","isOpen","setIsOpen","isLoading","setIsLoading","control","handleSubmit","formState","errors","setError","reset","resolver","onSubmit","data","user","updateProfile","setUser","e","response","status","Object","keys","forEach","key","type","message","loadData","getProfile","firstName","lastName","field","Boolean"],"mappings":"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","sourcesContent":["import { useForm, Controller } from \"react-hook-form\";\nimport {\n  TextField,\n  Grid,\n  makeStyles,\n  Container,\n  Button,\n  Typography,\n  Snackbar,\n} from \"@material-ui/core\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport validationSchema from \"./validation\";\nimport api from \"../../services/api\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction Profile() {\n  const classes = useStyles();\n  const auth = useAuth();\n  const [isOpen, setIsOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n    setError,\n    reset,\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = async (data) => {\n    try {\n      setIsLoading(true);\n      const { data: user } = await api.auth.updateProfile(data);\n\n      auth.setUser(user);\n      setIsOpen(true);\n    } catch (e) {\n      if (e.response.status === 422) {\n        Object.keys(e.response.data.errors).forEach((key) => {\n          setError(key, {\n            type: \"manual\",\n            message: e.response.data.errors[key],\n          });\n        });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const loadData = useCallback(async () => {\n    const { data } = await api.auth.getProfile();\n\n    reset({\n      firstName: data.firstName,\n      lastName: data.lastName,\n    });\n  }, [reset]);\n\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  return (\n    <Container maxWidth=\"xs\" className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">Update profile</Typography>\n        </Grid>\n      </Grid>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Controller\n              name=\"firstName\"\n              control={control}\n              defaultValue=\"\"\n              render={({ field }) => (\n                <TextField\n                  {...field}\n                  error={Boolean(errors.firstName?.message)}\n                  fullWidth={true}\n                  label=\"First name\"\n                  variant=\"filled\"\n                  helperText={errors.firstName?.message}\n                />\n              )}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Controller\n              name=\"lastName\"\n              control={control}\n              defaultValue=\"\"\n              render={({ field }) => (\n                <TextField\n                  {...field}\n                  error={Boolean(errors.lastName?.message)}\n                  fullWidth={true}\n                  label=\"Last name\"\n                  variant=\"filled\"\n                  helperText={errors.lastName?.message}\n                />\n              )}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              disabled={isLoading}\n            >\n              Update\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n      <Snackbar\n        open={isOpen}\n        autoHideDuration={6000}\n        onClose={() => setIsOpen(false)}\n        message=\"Profile updated successfully\"\n      />\n    </Container>\n  );\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}